#include "stdafx.h"
#include "Memoryman.h"


int PoolSpanNum;
Span *PoolSpan[MAX_MEMORY_POOL_SIZE];


////////////////////////////////////////////////////////////////////////
//                  Span memory management                            //
////////////////////////////////////////////////////////////////////////

Span *newSpan()
{
    if (PoolSpanNum > 0) return PoolSpan[--PoolSpanNum];
    else return new Span;
};

////////////////////////////////////////////////////////////////////////

void deleteSpan(Span *span)
{
    if (PoolSpanNum < MAX_MEMORY_POOL_SIZE) PoolSpan[PoolSpanNum++] = span;
    else delete span;
};

////////////////////////////////////////////////////////////////////////
//                  CVertex memory management                            //
////////////////////////////////////////////////////////////////////////

CVertex *newVertex()
{
    return new CVertex;
};

////////////////////////////////////////////////////////////////////////

void deleteVertex(CVertex *vertex)
{
    if (--vertex->refs) return;
    delete vertex;
};

////////////////////////////////////////////////////////////////////////
void memInit()
{
    /* spans */
    PoolSpanNum = 0;
}

////////////////////////////////////////////////////////////////////////

void memDone()
{
    /* spans */
    for (int  i = 0; i<PoolSpanNum; i++)
        delete PoolSpan[i];

}

////////////////////////////////////////////////////////////////////////